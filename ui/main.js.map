{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/apicaller.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header.intercepter.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApicallerService {\n\n  constructor(private http:HttpClient) { }\n\n  detectFaces(data):Observable<any>{\n     return this.http.post(\"https://faceapicaller.herokuapp.com/getFaceData\",data)\n  }\n}\n","module.exports = \"#imgDiv{\\r\\n    position: absolute;\\r\\n    background-repeat: no-repeat;\\r\\n    border: 1px solid #bbb;\\r\\n    border: solid;\\r\\n    background-color: cadetblue;\\r\\n    left: 100px;\\r\\n    top:200px;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n#face{\\r\\n    position: absolute;\\r\\n    border:solid;\\r\\n    \\r\\n}\\r\\n#titleDiv{\\r\\n    height: 100px;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    font-size: -webkit-xxx-large;\\r\\n    background-color: black;\\r\\n    color: sandybrown;\\r\\n    font-family: sans-serif;\\r\\n}\\r\\n.upload-btn-wrapper {\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n    display: inline-block;\\r\\n    padding: 2%;\\r\\n    width: 100vw;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n  }\\r\\n.btn {\\r\\n    border: 2px solid gray;\\r\\n    color:white;\\r\\n    background-color:brown;\\r\\n    padding: 8px 20px;\\r\\n    border-radius: 8px;\\r\\n    font-size: 20px;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n.upload-btn-wrapper input[type=file] {\\r\\n    font-size: 100px;\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    opacity: 0;\\r\\n  }\\r\\n\\r\\n  \"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div id=\\\"containerDiv\\\" class=\\\"js\\\">\\n  <div id=\\\"titleDiv\\\">\\n    Welcome to {{ title }}\\n  </div>\\n  <div id=\\\"content\\\">\\n    <!-- <div class=\\\"fileUploadWrapper\\\">\\n        <input type=\\\"file\\\" class=\\\"fileUpload\\\" id=\\\"fileUpload\\\" #fileInput (change)=\\\"fileChange($event)\\\">\\n        \\n    </div> -->\\n\\n    <div class=\\\"upload-btn-wrapper\\\">\\n      <button class=\\\"btn\\\" >Upload a file</button>\\n      <input type=\\\"file\\\" name=\\\"myfile\\\" (change)=\\\"fileChange($event)\\\"/>\\n    </div>\\n\\n  <div id=\\\"imgDiv\\\"><img class=\\\"imageContainer\\\" [src]=\\\"localUrl\\\" >  <div id=\\\"face\\\"></div></div>\\n</div>\\n  \\n</div>\\n\"","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { ApicallerService } from 'src/app/apicaller.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  @ViewChild('fileInput') inputEl: ElementRef;\n  @ViewChild('img') img: ElementRef;\n  constructor(private appService:ApicallerService,private httpClient:HttpClient){\n\n  }\n  ngOnInit(){\n    \n  }\n  fileChange(event:any){\n    \n    if(event.target.files && event.target.files.length > 0) {\n      let file = event.target.files[0];\n      let reader = new FileReader();\n      reader.onload = (event: any) => {\n        this.localUrl = event.target.result;\n        \n        this.appService.detectFaces(file).subscribe((face)=>{\n            this.pointFace(face);\n        })\n    }\n    reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n  private pointFace(face){\n            document.getElementById(\"face\").style.left=face[0].faceRectangle.left+\"px\";\n            document.getElementById(\"face\").style.top=face[0].faceRectangle.top+\"px\";\n            document.getElementById(\"face\").style.width=face[0].faceRectangle.width+\"px\";\n            document.getElementById(\"face\").style.height=face[0].faceRectangle.height+\"px\";\n  }\n  title = 'Face-it';\n  localUrl:string=\"\";\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ApicallerService } from './apicaller.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HeaderIntercepter } from './header.intercepter';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [\n    ApicallerService,{\n      provide:HTTP_INTERCEPTORS,\n      useClass:HeaderIntercepter,\n      multi:true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HeaderIntercepter implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n        let request=req.clone({\r\n            setHeaders:{\r\n                'Content-Type':'application/octet-stream',\r\n            }\r\n        })\r\n\r\n        return next.handle(request);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}